import { useEffect, useMemo, useState, useContext } from 'react';
import { Manager } from 'socket.io-client';
import { AuthContext } from './AuthContext'; // Assurez-vous d'importer le contexte d'authentification appropriÃ©

const manager = new Manager("ws://localhost:8001");

export default function useSocket() {
  const authCtx = useContext(AuthContext);
  const [socket, setSocket] = useState(null);

  useEffect(() => {
    if (authCtx.isLoggedIn) {
      const newSocket = manager.socket('/', { auth: { token: authCtx.token } });
      setSocket(newSocket);

      return () => {
        newSocket.disconnect();
      };
    }
  }, [authCtx]);

  const addListener = useMemo(() => {
    return (signal, callback) => {
      if (socket) {
        socket.on(signal, callback);
      }
    };
  }, [socket]);

  const sendMessage = useMemo(() => {
    return (signal, message) => {
      if (socket) {
        socket.emit(signal, message);
      }
    };
  }, [socket]);

  return [sendMessage, addListener];
}
