sendDirectMessage: any = async (content: string, author: number, receiver: number) => {
  const user = this.getUser(receiver);
  const a = this.getUser(author);
  if (user && a)
  {
    this.server.to(user.socketId).emit("getMessageDirect", {
      content,
      author,
      receiver,
    });
    const usersDirectForReceiver = await this.userService.getUsersWithMessages(receiver);
    if (!usersDirectForReceiver || !(usersDirectForReceiver.find(u => +u.id === +author)))
    {
      this.server.to(user.socketId).emit("getNewDirectUser", usersDirectForReceiver); // Envoyer la liste des utilisateurs mise à jour
    };
  }
  if (a && user) {
    const usersDirectForAuthor = await this.userService.getUsersWithMessages(author);
    if (!usersDirectForAuthor || !(usersDirectForAuthor.find(u => +u.id === +author)))
    {
      const a = this.getUser(author);
      this.server.to(a.socketId).emit("getNewDirectUser", usersDirectForAuthor); // Envoyer la liste des utilisateurs mise à jour
    };
  }
};
